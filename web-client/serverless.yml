service:
  name: mister-mail-web-client

plugins:
  - serverless-finch

custom:
  client:
    bucketName: ${self:custom.webapp-s3-bucket}
    distributionFolder: build
    indexDocument: index.html
    errorDocument: index.html
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  webapp-s3-bucket: ${self:service}-${self:custom.stage}-webapp

provider:
  name: aws
  runtime: nodejs12.x

resources:
  Resources:
    WebAppS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.webapp-s3-bucket}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    WebAppS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: WebAppS3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource: "arn:aws:s3:::${self:custom.webapp-s3-bucket}/*"

    WebAppCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: ${self:custom.webapp-s3-bucket}.s3.amazonaws.com
              Id: WebApp
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
          Enabled: 'true'
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            TargetOriginId: WebApp
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            CloudFrontDefaultCertificate: 'true'

  Outputs:
    WebAppCloudFrontDistributionOutput:
      Value: !GetAtt WebAppCloudFrontDistribution.DomainName
      Export:
        Name: WebAppCloudFrontDistribution-${self:custom.stage}
