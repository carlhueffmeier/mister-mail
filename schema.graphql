schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Query {
  getCampaigns: [Campaign!]!
}

type Mutation {
  createCampaign(data: CreateCampaignInput!): Campaign!
  notifyCampaignUpdate(data: NotifyCampaignUpdate!): Campaign!
}

type Subscription {
  campaignUpdate: Campaign
  @aws_subscribe(mutations: ["createCampaign", "notifyCampaignUpdate"])
}

input CreateCampaignInput {
  name: String!
  questionText: String!
  destinations: [DestinationInput!]!
}

input DestinationInput {
  name: String!
  email: String!
}

type Campaign {
  id: String!
  uid: String!
  created: Long!
  updated: Long!
  name: String!
  from: String!
  questionText: String!
  destinations: [Destination!]!
  stats: CampaignStats!
}

type Destination {
  name: String!
  email: String!
}

type CampaignStats {
  Created: Int
  Sent: Int
  Delivered: Int
  Complaint: Int
  Rejected: Int
  Bounce: Int
  Opened: Int
  Responded: Int
}

input NotifyCampaignUpdate {
  id: String
  uid: String
  created: Long
  updated: Long
  name: String
  from: String
  questionText: String
  destinations: [DestinationInput]
  stats: CampaignStatsInput
}

input CampaignStatsInput {
  Created: Int
  Sent: Int
  Delivered: Int
  Complaint: Int
  Rejected: Int
  Bounce: Int
  Opened: Int
  Responded: Int
}
